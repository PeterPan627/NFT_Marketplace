/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ElpisHeroMarketplace,
  ElpisHeroMarketplaceInterface,
} from "../ElpisHeroMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ElpisHeroesData",
        name: "_elpisHeroesData",
        type: "address",
      },
      {
        internalType: "contract ElpisMetaverseHeroes",
        name: "_elpisHeroes",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerBeforeOwnershipTransferred",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerAfterOwnershipTransferred",
        type: "address",
      },
    ],
    name: "ElpisHeroOwnershipChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ad",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "status",
        type: "bytes32",
      },
    ],
    name: "TradeStatusChange",
    type: "event",
  },
  {
    inputs: [],
    name: "ELPISHERO_MARKETPLACE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "buyElpisHero",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "elpisHeroes",
    outputs: [
      {
        internalType: "contract ElpisMetaverseHeroes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "elpisHeroesData",
    outputs: [
      {
        internalType: "contract ElpisHeroesData",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "elpisHeroesDataContract",
    outputs: [
      {
        internalType: "contract ElpisHeroesData",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getTrade",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "status",
            type: "bytes32",
          },
        ],
        internalType: "struct ElpisHeroTradable.Trade",
        name: "trade_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPrice",
        type: "uint256",
      },
    ],
    name: "openTradeWhenCreateNewPhotoNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "trades",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "status",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
    ],
    name: "transferOwnershipOfElpisHero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161123838038061123883398101604081905261002f91610082565b600180546001600160a01b039384166001600160a01b03199182168117909255600060035560058054821690921790915560068054929093169181169190911790915560048054909116301790556100d3565b60008060408385031215610094578182fd5b825161009f816100bb565b60208401519092506100b0816100bb565b809150509250929050565b6001600160a01b03811681146100d057600080fd5b50565b611156806100e26000396000f3fe6080604052600436106100bb5760003560e01c8063254d994511610074578063781864b41161004e578063781864b4146102dd57806379040d60146102f0578063fe183d151461031057600080fd5b8063254d9945146101d75780632db25e05146101f75780635695c793146102bd57600080fd5b806309ec6cc7116100a557806309ec6cc71461011f5780631a2afa4c1461013f5780631e6c598e1461015f57600080fd5b8062de9415146100c057806306563cd0146100e2575b600080fd5b3480156100cc57600080fd5b506100e06100db366004611032565b610330565b005b3480156100ee57600080fd5b50600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012b57600080fd5b506100e061013a36600461101a565b61050f565b34801561014b57600080fd5b50600554610102906001600160a01b031681565b34801561016b57600080fd5b506101ad61017a36600461101a565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0390911692919084565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610116565b3480156101e357600080fd5b506100e06101f236600461101a565b61075a565b34801561020357600080fd5b5061028161021236600461101a565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260026020818152604092839020835160808101855281546001600160a01b03168152600182015492810192909252918201549281019290925260030154606082015290565b604051610116919081516001600160a01b0316815260208083015190820152604080830151908201526060918201519181019190915260800190565b3480156102c957600080fd5b50600454610102906001600160a01b031681565b6100e06102eb36600461101a565b610918565b3480156102fc57600080fd5b50600654610102906001600160a01b031681565b34801561031c57600080fd5b506100e061032b366004611061565b610d9d565b600082815260026020526040902060038101546327b832b760e11b1461039d5760405162461bcd60e51b815260206004820152601260248201527f5472616465206973206e6f74204f70656e2e000000000000000000000000000060448201526064015b60405180910390fd5b6000838152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841617905560005460018201546040516323b872dd60e01b81523060048201526001600160a01b03858116602483015260448201929092529116906323b872dd90606401600060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050506810d85b98d95b1b195960ba1b6104c28460408051608081018252600080825260208201819052918101829052606081019190915250600090815260026020818152604092839020835160808101855281546001600160a01b03168152600182015492810192909252918201549281019290925260030154606082015290565b60600152604080518481526810d85b98d95b1b195960ba1b60208201527f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf910160405180910390a1505050565b600081815260026020526040902080546001600160a01b0316331461059c5760405162461bcd60e51b815260206004820152602660248201527f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207360448201527f656c6c65722e00000000000000000000000000000000000000000000000000006064820152608401610394565b80600301546327b832b760e11b146105f65760405162461bcd60e51b815260206004820152601260248201527f5472616465206973206e6f74204f70656e2e00000000000000000000000000006044820152606401610394565b60015460408051631a3669bb60e31b8152600481018590526024810191909152600960448201526810d85b98d95b1b195960ba1b60648201526001600160a01b039091169063d1b34dd890608401600060405180830381600087803b15801561065e57600080fd5b505af1158015610672573d6000803e3d6000fd5b5050600054835460018501546040516323b872dd60e01b81523060048201526001600160a01b0392831660248201526044810191909152911692506323b872dd9150606401600060405180830381600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b505050600083815260026020526040908190206810d85b98d95b1b195960ba1b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf915061074e908481526810d85b98d95b1b195960ba1b602082015260400190565b60405180910390a15050565b600081815260026020526040902080546001600160a01b031633146107cb5760405162461bcd60e51b815260206004820152602160248201527f54726164652063616e206265206f70656e206f6e6c792062792073656c6c65726044820152601760f91b6064820152608401610394565b600154604051631a3669bb60e31b81526001600160a01b039091169063d1b34dd89061081b9085906004019081526040602082018190526004908201526327b832b760e11b606082015260800190565b600060405180830381600087803b15801561083557600080fd5b505af1158015610849573d6000803e3d6000fd5b505060005460018401546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b0390911692506323b872dd9150606401600060405180830381600087803b1580156108a557600080fd5b505af11580156108b9573d6000803e3d6000fd5b505050600083815260026020526040908190206327b832b760e11b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf915061074e908481526327b832b760e11b602082015260400190565b600554604051635e9c2b6d60e11b8152600481018390526000916001600160a01b03169063bd3856da9060240160006040518083038186803b15801561095d57600080fd5b505afa158015610971573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109999190810190610f5c565b90507f8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af1444581608001516040516020016109d19190611082565b6040516020818303038152906040528051906020012014610a345760405162461bcd60e51b815260206004820152601460248201527f456c7069734865726f2069736e2774204f70656e0000000000000000000000006044820152606401610394565b604081015160608201518190348114610ab55760405162461bcd60e51b815260206004820152602a60248201527f6d73672e76616c75652073686f756c6420626520657175616c20746f2074686560448201527f20627579416d6f756e74000000000000000000000000000000000000000000006064820152608401610394565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610aeb573d6000803e3d6000fd5b5083516006546040516331a9108f60e11b8152600481018390523392916000916001600160a01b0390911690636352211e9060240160206040518083038186803b158015610b3857600080fd5b505afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190610f39565b600554604051630658383b60e31b8152600481018590526001600160a01b0386811660248301529293509116906332c1c1d890604401600060405180830381600087803b158015610bc057600080fd5b505af1158015610bd4573d6000803e3d6000fd5b505060055460408051631a3669bb60e31b8152600481018790526024810191909152600960448201526810d85b98d95b1b195960ba1b60648201526001600160a01b03909116925063d1b34dd89150608401600060405180830381600087803b158015610c4057600080fd5b505af1158015610c54573d6000803e3d6000fd5b50506006546040516323b872dd60e01b81526001600160a01b03898116600483015287811660248301526044820187905290911692506323b872dd9150606401600060405180830381600087803b158015610cae57600080fd5b505af1158015610cc2573d6000803e3d6000fd5b50506006546040516331a9108f60e11b815260048101869052600093506001600160a01b039091169150636352211e9060240160206040518083038186803b158015610d0d57600080fd5b505afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190610f39565b604080518581526001600160a01b03858116602083015283168183015290519192507fc2aec351cf198de36e1a5a2f728154d7bb7ac47c5be31a4ae498ba64a2605784919081900360600190a1505050505050505050565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b50506040805160808101825233815260208082018781528284018781526327b832b760e11b606085019081526003805460009081526002958690529687209551865473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390911617865592516001808701919091559151938501939093559151928101929092558154909450909250610e9a9084906110c7565b90915550505050565b8051610eae81611131565b919050565b600082601f830112610ec3578081fd5b815167ffffffffffffffff80821115610ede57610ede61111b565b604051601f8301601f19908116603f01168101908282118183101715610f0657610f0661111b565b81604052838152866020858801011115610f1e578485fd5b610f2f8460208301602089016110eb565b9695505050505050565b600060208284031215610f4a578081fd5b8151610f5581611131565b9392505050565b600060208284031215610f6d578081fd5b815167ffffffffffffffff80821115610f84578283fd5b9083019060c08286031215610f97578283fd5b610f9f61109e565b82518152602083015182811115610fb4578485fd5b610fc087828601610eb3565b602083015250610fd260408401610ea3565b604082015260608301516060820152608083015182811115610ff2578485fd5b610ffe87828601610eb3565b60808301525060a083015160a082015280935050505092915050565b60006020828403121561102b578081fd5b5035919050565b60008060408385031215611044578081fd5b82359150602083013561105681611131565b809150509250929050565b60008060408385031215611073578182fd5b50508035926020909101359150565b600082516110948184602087016110eb565b9190910192915050565b60405160c0810167ffffffffffffffff811182821017156110c1576110c161111b565b60405290565b600082198211156110e657634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156111065781810151838201526020016110ee565b83811115611115576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461114657600080fd5b5056fea164736f6c6343000804000a";

type ElpisHeroMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElpisHeroMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ElpisHeroMarketplace__factory extends ContractFactory {
  constructor(...args: ElpisHeroMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ElpisHeroMarketplace";
  }

  deploy(
    _elpisHeroesData: string,
    _elpisHeroes: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ElpisHeroMarketplace> {
    return super.deploy(
      _elpisHeroesData,
      _elpisHeroes,
      overrides || {}
    ) as Promise<ElpisHeroMarketplace>;
  }
  getDeployTransaction(
    _elpisHeroesData: string,
    _elpisHeroes: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _elpisHeroesData,
      _elpisHeroes,
      overrides || {}
    );
  }
  attach(address: string): ElpisHeroMarketplace {
    return super.attach(address) as ElpisHeroMarketplace;
  }
  connect(signer: Signer): ElpisHeroMarketplace__factory {
    return super.connect(signer) as ElpisHeroMarketplace__factory;
  }
  static readonly contractName: "ElpisHeroMarketplace";
  public readonly contractName: "ElpisHeroMarketplace";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElpisHeroMarketplaceInterface {
    return new utils.Interface(_abi) as ElpisHeroMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ElpisHeroMarketplace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ElpisHeroMarketplace;
  }
}
