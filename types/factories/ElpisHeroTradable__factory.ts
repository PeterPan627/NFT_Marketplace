/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ElpisHeroTradable,
  ElpisHeroTradableInterface,
} from "../ElpisHeroTradable";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ElpisHeroesData",
        name: "_elpisHeroesData",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ad",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "status",
        type: "bytes32",
      },
    ],
    name: "TradeStatusChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "elpisHeroesData",
    outputs: [
      {
        internalType: "contract ElpisHeroesData",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getTrade",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "status",
            type: "bytes32",
          },
        ],
        internalType: "struct ElpisHeroTradable.Trade",
        name: "trade_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "openTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenPrice",
        type: "uint256",
      },
    ],
    name: "openTradeWhenCreateNewPhotoNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "trades",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "status",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
    ],
    name: "transferOwnershipOfElpisHero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a4b380380610a4b83398101604081905261002f91610059565b600180546001600160a01b0319166001600160a01b03929092169190911790556000600355610087565b60006020828403121561006a578081fd5b81516001600160a01b0381168114610080578182fd5b9392505050565b6109b5806100966000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80631e6c598e1161005b5780631e6c598e146100d9578063254d9945146101445780632db25e0514610157578063fe183d151461021057600080fd5b8062de94151461008157806306563cd01461009657806309ec6cc7146100c6575b600080fd5b61009461008f366004610929565b610223565b005b6001546100a9906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100946100d4366004610911565b610402565b61011a6100e7366004610911565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0390911692919084565b604080516001600160a01b03909516855260208501939093529183015260608201526080016100bd565b610094610152366004610911565b61064d565b6101d4610165366004610911565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260026020818152604092839020835160808101855281546001600160a01b03168152600182015492810192909252918201549281019290925260030154606082015290565b6040516100bd919081516001600160a01b0316815260208083015190820152604080830151908201526060918201519181019190915260800190565b61009461021e366004610963565b61080b565b600082815260026020526040902060038101546327b832b760e11b146102905760405162461bcd60e51b815260206004820152601260248201527f5472616465206973206e6f74204f70656e2e000000000000000000000000000060448201526064015b60405180910390fd5b6000838152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841617905560005460018201546040516323b872dd60e01b81523060048201526001600160a01b03858116602483015260448201929092529116906323b872dd90606401600060405180830381600087803b15801561031d57600080fd5b505af1158015610331573d6000803e3d6000fd5b505050506810d85b98d95b1b195960ba1b6103b58460408051608081018252600080825260208201819052918101829052606081019190915250600090815260026020818152604092839020835160808101855281546001600160a01b03168152600182015492810192909252918201549281019290925260030154606082015290565b60600152604080518481526810d85b98d95b1b195960ba1b60208201527f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf910160405180910390a1505050565b600081815260026020526040902080546001600160a01b0316331461048f5760405162461bcd60e51b815260206004820152602660248201527f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207360448201527f656c6c65722e00000000000000000000000000000000000000000000000000006064820152608401610287565b80600301546327b832b760e11b146104e95760405162461bcd60e51b815260206004820152601260248201527f5472616465206973206e6f74204f70656e2e00000000000000000000000000006044820152606401610287565b60015460408051631a3669bb60e31b8152600481018590526024810191909152600960448201526810d85b98d95b1b195960ba1b60648201526001600160a01b039091169063d1b34dd890608401600060405180830381600087803b15801561055157600080fd5b505af1158015610565573d6000803e3d6000fd5b5050600054835460018501546040516323b872dd60e01b81523060048201526001600160a01b0392831660248201526044810191909152911692506323b872dd9150606401600060405180830381600087803b1580156105c457600080fd5b505af11580156105d8573d6000803e3d6000fd5b505050600083815260026020526040908190206810d85b98d95b1b195960ba1b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf9150610641908481526810d85b98d95b1b195960ba1b602082015260400190565b60405180910390a15050565b600081815260026020526040902080546001600160a01b031633146106be5760405162461bcd60e51b815260206004820152602160248201527f54726164652063616e206265206f70656e206f6e6c792062792073656c6c65726044820152601760f91b6064820152608401610287565b600154604051631a3669bb60e31b81526001600160a01b039091169063d1b34dd89061070e9085906004019081526040602082018190526004908201526327b832b760e11b606082015260800190565b600060405180830381600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b505060005460018401546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b0390911692506323b872dd9150606401600060405180830381600087803b15801561079857600080fd5b505af11580156107ac573d6000803e3d6000fd5b505050600083815260026020526040908190206327b832b760e11b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf9150610641908481526327b832b760e11b602082015260400190565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561085d57600080fd5b505af1158015610871573d6000803e3d6000fd5b50506040805160808101825233815260208082018781528284018781526327b832b760e11b606085019081526003805460009081526002958690529687209551865473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390911617865592516001808701919091559151938501939093559151928101929092558154909450909250610908908490610984565b90915550505050565b600060208284031215610922578081fd5b5035919050565b6000806040838503121561093b578081fd5b8235915060208301356001600160a01b0381168114610958578182fd5b809150509250929050565b60008060408385031215610975578182fd5b50508035926020909101359150565b600082198211156109a357634e487b7160e01b81526011600452602481fd5b50019056fea164736f6c6343000804000a";

type ElpisHeroTradableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElpisHeroTradableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ElpisHeroTradable__factory extends ContractFactory {
  constructor(...args: ElpisHeroTradableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ElpisHeroTradable";
  }

  deploy(
    _elpisHeroesData: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ElpisHeroTradable> {
    return super.deploy(
      _elpisHeroesData,
      overrides || {}
    ) as Promise<ElpisHeroTradable>;
  }
  getDeployTransaction(
    _elpisHeroesData: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_elpisHeroesData, overrides || {});
  }
  attach(address: string): ElpisHeroTradable {
    return super.attach(address) as ElpisHeroTradable;
  }
  connect(signer: Signer): ElpisHeroTradable__factory {
    return super.connect(signer) as ElpisHeroTradable__factory;
  }
  static readonly contractName: "ElpisHeroTradable";
  public readonly contractName: "ElpisHeroTradable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElpisHeroTradableInterface {
    return new utils.Interface(_abi) as ElpisHeroTradableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ElpisHeroTradable {
    return new Contract(address, _abi, signerOrProvider) as ElpisHeroTradable;
  }
}
