/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ElpisHeroesData,
  ElpisHeroesDataInterface,
} from "../ElpisHeroesData";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elpisHeroIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elpisHeroesData",
    outputs: [
      {
        internalType: "uint256",
        name: "elpisHeroId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "elpisHeroName",
        type: "string",
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "heroPrice",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "status",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "reputation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllElpisData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "elpisHeroId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "elpisHeroName",
            type: "string",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "heroPrice",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "reputation",
            type: "uint256",
          },
        ],
        internalType: "struct ElpisHeroDataObjects.ElpisHeroData[]",
        name: "_elpisHeroesData",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elpisHeroId",
        type: "uint256",
      },
    ],
    name: "getElpisHeroData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "elpisHeroId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "elpisHeroName",
            type: "string",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "heroPrice",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "reputation",
            type: "uint256",
          },
        ],
        internalType: "struct ElpisHeroDataObjects.ElpisHeroData",
        name: "_elpisHeroData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_elpisHeroId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_elpisHeroName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_heroPrice",
        type: "uint256",
      },
    ],
    name: "saveMetadataOfElpisHero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ElpisMetaverseHeroes",
        name: "_elpisHeroes",
        type: "address",
      },
    ],
    name: "setElpisHeroContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_elpisHeroId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "updateOwnerOfELpisHero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_elpisHeroId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_elpisHeroId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_newStatus",
        type: "string",
      },
    ],
    name: "updateStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b031916331790556112f9806100326000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80639c75079911610076578063bd3856da1161005b578063bd3856da14610147578063c6d8e68c14610167578063d1b34dd81461017a57600080fd5b80639c7507991461011f578063aef843d71461013457600080fd5b80630b9d8e36146100a857806332c1c1d8146100d65780637760deea146100eb57806382367b2d1461010c575b600080fd5b6100bb6100b6366004610ff8565b61018d565b6040516100cd9695949392919061122f565b60405180910390f35b6100e96100e4366004611010565b6102f3565b005b6100fe6100f9366004610ff8565b6103df565b6040519081526020016100cd565b6100e961011a3660046110e3565b610400565b610127610690565b6040516100cd91906111bb565b6100e9610142366004611084565b610848565b61015a610155366004610ff8565b6109c8565b6040516100cd919061121c565b6100e9610175366004610fdc565b610ba7565b6100e961018836600461103f565b610c30565b6000818154811061019d57600080fd5b600091825260209091206006909102018054600182018054919350906101c290611283565b80601f01602080910402602001604051908101604052809291908181526020018280546101ee90611283565b801561023b5780601f106102105761010080835404028352916020019161023b565b820191906000526020600020905b81548152906001019060200180831161021e57829003601f168201915b505050506002830154600384015460048501805494956001600160a01b03909316949193509061026a90611283565b80601f016020809104026020016040519081016040528092919081815260200182805461029690611283565b80156102e35780601f106102b8576101008083540402835291602001916102e3565b820191906000526020600020905b8154815290600101906020018083116102c657829003601f168201915b5050505050908060050154905086565b6001600160a01b0381166103745760405162461bcd60e51b815260206004820152602760248201527f41206e6577206f776e657220616464726573732073686f756c64206265206e6f60448201527f7420656d7074790000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000829050600080828154811061039b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600690910201600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039490941693909317909255505050565b600281815481106103ef57600080fd5b600091825260209091200154905081565b6003546040516331a9108f60e11b81526004810184905283916000916001600160a01b0390911690636352211e9060240160206040518083038186803b15801561044957600080fd5b505afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610f99565b9050336001600160a01b038216148061051c575060035460405163020604bf60e21b81526004810184905233916001600160a01b03169063081812fc9060240160206040518083038186803b1580156104d957600080fd5b505afa1580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610f99565b6001600160a01b0316145b806105a5575060035460405163e985e9c560e01b81526001600160a01b0383811660048301523360248301529091169063e985e9c59060440160206040518083038186803b15801561056d57600080fd5b505afa158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190610fbc565b6105f15760405162461bcd60e51b815260206004820152601960248201527f4d757374206265206f776e6572206f7220617070726f76656400000000000000604482015260640161036b565b6000831161064b5760405162461bcd60e51b815260206004820152602160248201527f50726963652073686f756c642062652067726561746572207468616e207a65726044820152606f60f81b606482015260840161036b565b6000849050600080828154811061067257634e487b7160e01b600052603260045260246000fd5b60009182526020909120600360069092020101949094555050505050565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561083f57838290600052602060002090600602016040518060c0016040529081600082015481526020016001820180546106f190611283565b80601f016020809104026020016040519081016040528092919081815260200182805461071d90611283565b801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b505050918352505060028201546001600160a01b03166020820152600382015460408201526004820180546060909201916107a490611283565b80601f01602080910402602001604051908101604052809291908181526020018280546107d090611283565b801561081d5780601f106107f25761010080835404028352916020019161081d565b820191906000526020600020905b81548152906001019060200180831161080057829003601f168201915b50505050508152602001600582015481525050815260200190600101906106b4565b50505050905090565b6040805160c08101825285815260208082018681526001600160a01b03861683850152606083018590528351808501909452600984527f43616e63656c6c65640000000000000000000000000000000000000000000000848301526080830193909352600060a08301819052805460018101825590805282517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600690920291820190815593518051939485949093610925937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56401920190610e79565b50604082015160028201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055606082015160038201556080820151805161097e916004840191602090910190610e79565b5060a091909101516005909101555050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01929092555050565b610a0a6040518060c00160405280600081526020016060815260200160006001600160a01b031681526020016000815260200160608152602001600081525090565b6000808381548110610a2c57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600602016040518060c001604052908160008201548152602001600182018054610a5f90611283565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8b90611283565b8015610ad85780601f10610aad57610100808354040283529160200191610ad8565b820191906000526020600020905b815481529060010190602001808311610abb57829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482018054606090920191610b1290611283565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3e90611283565b8015610b8b5780601f10610b6057610100808354040283529160200191610b8b565b820191906000526020600020905b815481529060010190602001808311610b6e57829003601f168201915b5050509183525050600591909101546020909101529392505050565b6001546001600160a01b03163314610c015760405162461bcd60e51b815260206004820152600d60248201527f4d757374206265206f776e657200000000000000000000000000000000000000604482015260640161036b565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6003546040516331a9108f60e11b81526004810184905283916000916001600160a01b0390911690636352211e9060240160206040518083038186803b158015610c7957600080fd5b505afa158015610c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb19190610f99565b9050336001600160a01b0382161480610d4c575060035460405163020604bf60e21b81526004810184905233916001600160a01b03169063081812fc9060240160206040518083038186803b158015610d0957600080fd5b505afa158015610d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d419190610f99565b6001600160a01b0316145b80610dd5575060035460405163e985e9c560e01b81526001600160a01b0383811660048301523360248301529091169063e985e9c59060440160206040518083038186803b158015610d9d57600080fd5b505afa158015610db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd59190610fbc565b610e215760405162461bcd60e51b815260206004820152601960248201527f4d757374206265206f776e6572206f7220617070726f76656400000000000000604482015260640161036b565b60008490506000808281548110610e4857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060060201905084816004019080519060200190610e70929190610e79565b50505050505050565b828054610e8590611283565b90600052602060002090601f016020900481019282610ea75760008555610eed565b82601f10610ec057805160ff1916838001178555610eed565b82800160010185558215610eed579182015b82811115610eed578251825591602001919060010190610ed2565b50610ef9929150610efd565b5090565b5b80821115610ef95760008155600101610efe565b600082601f830112610f22578081fd5b813567ffffffffffffffff80821115610f3d57610f3d6112be565b604051601f8301601f19908116603f01168101908282118183101715610f6557610f656112be565b81604052838152866020858801011115610f7d578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610faa578081fd5b8151610fb5816112d4565b9392505050565b600060208284031215610fcd578081fd5b81518015158114610fb5578182fd5b600060208284031215610fed578081fd5b8135610fb5816112d4565b600060208284031215611009578081fd5b5035919050565b60008060408385031215611022578081fd5b823591506020830135611034816112d4565b809150509250929050565b60008060408385031215611051578182fd5b82359150602083013567ffffffffffffffff81111561106e578182fd5b61107a85828601610f12565b9150509250929050565b60008060008060808587031215611099578182fd5b84359350602085013567ffffffffffffffff8111156110b6578283fd5b6110c287828801610f12565b93505060408501356110d3816112d4565b9396929550929360600135925050565b600080604083850312156110f5578182fd5b50508035926020909101359150565b60008151808452815b818110156111295760208185018101518683018201520161110d565b8181111561113a5782602083870101525b50601f01601f19169290920160200192915050565b805182526000602082015160c0602085015261116e60c0850182611104565b90506001600160a01b03604084015116604085015260608301516060850152608083015184820360808601526111a48282611104565b91505060a083015160a08501528091505092915050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b8281101561120f57603f198886030184526111fd85835161114f565b945092850192908501906001016111e1565b5092979650505050505050565b602081526000610fb5602083018461114f565b86815260c06020820152600061124860c0830188611104565b6001600160a01b0387166040840152856060840152828103608084015261126f8186611104565b9150508260a0830152979650505050505050565b600181811c9082168061129757607f821691505b602082108114156112b857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146112e957600080fd5b5056fea164736f6c6343000804000a";

type ElpisHeroesDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElpisHeroesDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ElpisHeroesData__factory extends ContractFactory {
  constructor(...args: ElpisHeroesDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ElpisHeroesData";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ElpisHeroesData> {
    return super.deploy(overrides || {}) as Promise<ElpisHeroesData>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ElpisHeroesData {
    return super.attach(address) as ElpisHeroesData;
  }
  connect(signer: Signer): ElpisHeroesData__factory {
    return super.connect(signer) as ElpisHeroesData__factory;
  }
  static readonly contractName: "ElpisHeroesData";
  public readonly contractName: "ElpisHeroesData";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElpisHeroesDataInterface {
    return new utils.Interface(_abi) as ElpisHeroesDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ElpisHeroesData {
    return new Contract(address, _abi, signerOrProvider) as ElpisHeroesData;
  }
}
